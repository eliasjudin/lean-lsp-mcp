name: Python Tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ripgrep
      - name: Set pending commit status (pytest)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request ? context.payload.pull_request.head.sha : context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'pending',
              context: 'pytest',
              description: 'CI started'
            });
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        env:
          LEAN_LOG_LEVEL: 'NONE'
        run: pytest -q
      - name: Mark success (pytest)
        if: ${{ success() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request ? context.payload.pull_request.head.sha : context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'success',
              context: 'pytest',
              description: 'All tests passed'
            });
      - name: Mark failure (pytest)
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request ? context.payload.pull_request.head.sha : context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'failure',
              context: 'pytest',
              description: 'Tests failed'
            });
